# Generated by Django 5.0.6 on 2025-09-04 01:55

from django.db import migrations
from django.db import transaction


def populate_user_field(apps, schema_editor):
    """
    Populate the user field for existing LegalRequest records.
    Maps requests to users based on email addresses.
    """
    LegalRequest = apps.get_model('gym_app', 'LegalRequest')
    User = apps.get_model('gym_app', 'User')
    
    # Get all legal requests that don't have a user assigned
    requests_without_user = LegalRequest.objects.filter(user__isnull=True)
    
    print(f"Found {requests_without_user.count()} legal requests without user assignment")
    
    updated_count = 0
    orphaned_count = 0
    
    with transaction.atomic():
        for request in requests_without_user:
            # Try to find a user with the same email
            try:
                user = User.objects.get(email=request.email)
                request.user = user
                request.save()
                updated_count += 1
                print(f"‚úÖ Mapped request {request.id} to user {user.email}")
            except User.DoesNotExist:
                # Create a client user for orphaned requests
                user = User.objects.create(
                    email=request.email,
                    first_name=request.first_name or 'Unknown',
                    last_name=request.last_name or 'User',
                    role='client',
                    identification='MIGRATED-' + str(request.id),
                    document_type='CC'
                )
                request.user = user
                request.save()
                orphaned_count += 1
                print(f"üÜï Created new user and mapped request {request.id} to {user.email}")
            except Exception as e:
                print(f"‚ùå Error processing request {request.id}: {str(e)}")
    
    print(f"Migration completed: {updated_count} requests mapped to existing users, {orphaned_count} new users created")


def reverse_populate_user_field(apps, schema_editor):
    """
    Reverse operation - clear user field
    """
    LegalRequest = apps.get_model('gym_app', 'LegalRequest')
    LegalRequest.objects.all().update(user=None)


class Migration(migrations.Migration):

    dependencies = [
        ('gym_app', '0030_add_user_reference_to_legal_request'),
    ]

    operations = [
        migrations.RunPython(
            populate_user_field,
            reverse_populate_user_field,
        ),
    ]
