# Generated by Django 5.0.6 on 2025-09-22 15:51

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('gym_app', '0034_documentrelationship'),
    ]

    operations = [
        migrations.CreateModel(
            name='CorporateRequestFiles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(help_text='The file associated with the corporate request.', upload_to='corporate_request_files/')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The date the file was uploaded.')),
            ],
            options={
                'verbose_name': 'Archivo de Solicitud Corporativa',
                'verbose_name_plural': 'Archivos de Solicitudes Corporativas',
            },
        ),
        migrations.CreateModel(
            name='CorporateRequestType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the corporate request type.', max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Tipo de Solicitud Corporativa',
                'verbose_name_plural': 'Tipos de Solicitudes Corporativas',
            },
        ),
        migrations.CreateModel(
            name='CorporateRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Brief title/subject of the request', max_length=200)),
                ('description', models.TextField(help_text='A detailed description of the request.')),
                ('priority', models.CharField(choices=[('LOW', 'Baja'), ('MEDIUM', 'Media'), ('HIGH', 'Alta'), ('URGENT', 'Urgente')], default='MEDIUM', help_text='Priority level of the request', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The date the request was created.')),
                ('request_number', models.CharField(blank=True, help_text='Unique identifier for the corporate request (e.g., CORP-2024-001)', max_length=20, null=True, unique=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pendiente'), ('IN_REVIEW', 'En Revisi√≥n'), ('RESPONDED', 'Respondida'), ('RESOLVED', 'Resuelta'), ('CLOSED', 'Cerrada')], default='PENDING', help_text='Current status of the corporate request', max_length=20)),
                ('status_updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the status was last updated')),
                ('estimated_completion_date', models.DateTimeField(blank=True, help_text='Estimated date for request completion', null=True)),
                ('actual_completion_date', models.DateTimeField(blank=True, help_text='Actual date when request was completed', null=True)),
                ('assigned_to', models.ForeignKey(blank=True, help_text='User from corporate client assigned to handle this request', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_corporate_requests', to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(help_text='The normal client who created this corporate request', limit_choices_to={'role': 'client'}, on_delete=django.db.models.deletion.CASCADE, related_name='sent_corporate_requests', to=settings.AUTH_USER_MODEL)),
                ('corporate_client', models.ForeignKey(help_text='The corporate client who will handle this request', limit_choices_to={'role': 'corporate_client'}, on_delete=django.db.models.deletion.CASCADE, related_name='received_corporate_requests', to=settings.AUTH_USER_MODEL)),
                ('files', models.ManyToManyField(blank=True, help_text='Files associated with the corporate request.', to='gym_app.corporaterequestfiles')),
                ('request_type', models.ForeignKey(help_text='The type of the corporate request.', on_delete=django.db.models.deletion.CASCADE, to='gym_app.corporaterequesttype')),
            ],
            options={
                'verbose_name': 'Solicitud Corporativa',
                'verbose_name_plural': 'Solicitudes Corporativas',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CorporateRequestResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response_text', models.TextField(help_text='The response message content')),
                ('user_type', models.CharField(choices=[('corporate_client', 'Cliente Corporativo'), ('client', 'Cliente Normal')], help_text='Type of user who created the response', max_length=20)),
                ('is_internal_note', models.BooleanField(default=False, help_text='If true, this response is only visible to corporate client staff')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the response was created')),
                ('corporate_request', models.ForeignKey(help_text='The corporate request this response belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='gym_app.corporaterequest')),
                ('response_files', models.ManyToManyField(blank=True, help_text='Files attached to this response', related_name='response_files', to='gym_app.corporaterequestfiles')),
                ('user', models.ForeignKey(help_text='The user who created this response', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Respuesta de Solicitud Corporativa',
                'verbose_name_plural': 'Respuestas de Solicitudes Corporativas',
                'ordering': ['created_at'],
            },
        ),
    ]
