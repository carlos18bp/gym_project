import{N as f,O as h,V as g,aG as y,aH as D}from"./index.js";const w=f("dynamicDocument",{state:()=>({documents:[],selectedDocument:null,dataLoaded:!1}),getters:{documentById:t=>e=>t.documents.find(s=>s.id==e)||null,publishedDocumentsUnassigned:t=>t.documents.filter(e=>e.state==="Published"&&!e.assigned_to),draftAndPublishedDocumentsUnassigned:t=>t.documents.filter(e=>(e.state==="Draft"||e.state==="Published")&&!e.assigned_to),progressDocumentsByClient:t=>e=>t.documents.filter(s=>s.state==="Progress"&&s.assigned_to===e),completedDocumentsByClient:t=>e=>t.documents.filter(s=>s.state==="Completed"&&s.assigned_to===e),progressAndCompletedDocumentsByClient:t=>e=>t.documents.filter(s=>s.assigned_to===e&&(s.state==="Progress"||s.state==="Completed")),filteredDocuments:t=>(e,s)=>{if(!e)return t.documents;const a=e.toLowerCase();return t.documents.filter(n=>{var o,c,r,d,u,i,l,m;return n.title.toLowerCase().includes(a)||n.state.toLowerCase().includes(a)||n.assigned_to&&s&&(((c=(o=s.userById(n.assigned_to))==null?void 0:o.first_name)==null?void 0:c.toLowerCase().includes(a))||((d=(r=s.userById(n.assigned_to))==null?void 0:r.last_name)==null?void 0:d.toLowerCase().includes(a))||((i=(u=s.userById(n.assigned_to))==null?void 0:u.email)==null?void 0:i.toLowerCase().includes(a))||((m=(l=s.userById(n.assigned_to))==null?void 0:l.identification)==null?void 0:m.toLowerCase().includes(a)))})}},actions:{async init(){this.dataLoaded||await this.fetchDocuments()},async fetchDocuments(){try{const t=await h("/dynamic-documents/");this.documents=t.data,this.dataLoaded=!0,console.log("Documents fetched successfully:",this.documents)}catch(t){console.error("Error fetching documents:",t)}},async createDocument(t){try{const e=await g("/dynamic-documents/create/",t);this.documents.push(e.data),this.selectedDocument=e.data,console.log("Document created successfully:",e.data),this.dataLoaded=!1,await this.fetchDocuments()}catch(e){console.error("Error creating document:",e)}},async updateDocument(t,e){try{const s=await y(`/dynamic-documents/${t}/update/`,e);console.log("Document updated successfully:",s.data),this.dataLoaded=!1,await this.fetchDocuments()}catch(s){console.error("Error updating document:",s)}},async deleteDocument(t){try{await D(`/dynamic-documents/${t}/delete/`),console.log(`Document with ID ${t} deleted successfully.`),this.dataLoaded=!1,await this.fetchDocuments()}catch(e){console.error("Error deleting document:",e)}},clearSelectedDocument(){this.selectedDocument=null,console.log("Selected document cleared.")}}});export{w as u};
